#include <stdio.h>
#include <string.h>
#define SIZE 10

typedef struct Stack {
	char elements[SIZE];
	int top;
}Stack;

void init(Stack *stack) {
	stack->top = -1;
	stack->elements[0] = '_';
}

int isEmpty(Stack *stack) {
	return (int) (stack->top/SIZE);
}

int isFull(Stack *stack) {
	return (int) SIZE-(stack->top+2)/SIZE;
}

char top(Stack *stack) {
	if (isEmpty(stack) != 1)
		return stack->elements[stack->top];
}

void push(Stack *stack, char element) {
	if (isFull(stack) != 1) {
		stack->top++;
		stack->elements[top(stack)] = element;
		//printf(" %c", stack->elements[top(stack)]);
	}
}

char pop(Stack *stack) {
	if (isEmpty(stack) != 1) {
		stack->top--;
		printf(" %c", stack->elements[top(stack)]);
		return stack->elements[top(stack)+1];
	}
}


int size(Stack *stack) {
	return stack->top;
}
	
int capacity(Stack *stack) {
	return SIZE;
}

void show(Stack *stack) {
	while (isEmpty(stack) != 1)
		pop(stack);
}

int main() {
	Stack sPalavra;
	
	printf("Insira uma palavra: ");
	char palavra[10];
	scanf(" %[^\n]s", palavra);
	
	int i = 0;
	
	init(&sPalavra);
	
	while (palavra[i]) {
		push(&sPalavra, palavra[i]);
		i++;
	}
	
	i=0;
	
	while (palavra[i]) {
		pop(&sPalavra);
		i++;
	}
	
	i = 0;
	int bandeira = 0;

	//if (bandeira == 0)
	//	printf("PALINDROMA");
	
	return 0;
}
